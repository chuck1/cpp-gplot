{% extends "CHeader.hpp" %}
{% block header %}
#include <vector>
#include <boost/signals2.hpp>
{% endblock %}
{% block body %}
template<typename T>
class Vector
{
	public:
		typedef boost::signals2::signal<void(T const &)> SIG;
		typedef std::vector<T> V;

		void			push_back(T const & t)
		{
			_M_v.push_back(t);
			
			_M_sig(t);
		}
		T &			operator[](int i)
		{
			return _M_v[i];
		}
		void			reserve(unsigned int sz)
		{
			_M_v.reserve(sz);
		}
		typename V::size_type	size()
		{
			return _M_v.size();
		}
		T &			back()
		{
			return _M_v.back();
		}

		SIG		_M_sig;

	private:
		V		_M_v;
};
{% endblock %}
